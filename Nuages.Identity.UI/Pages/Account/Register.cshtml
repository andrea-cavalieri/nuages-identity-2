@page
@model Nuages.Identity.UI.Pages.Account.Login
@inject IOptions<Nuages.Web.Recaptcha.GoogleRecaptchaOptions> RecaptchaOptions
@inject IOptions<UIOptions> UIOptions

@{
    ViewData["title"] = Localizer["register:title"];

}


<div class="flex justify-center mt-6">

    <i class="fas fa-spinner fa-spin fa-3x" v-if="status == 'sending'" v-show="status == 'sending'" style="display: none"></i>
    <div class="flex flex-col " v-if="status == 'done'" v-show="status == 'done'" style="display: none">
        <i class="fa fa-check-circle text-green-700 fa-3x text-center"></i>
        <span class="mt-4">@Localizer["register:accountCreated"]</span>
    </div>

</div>

<form class="space-y-4 mt-4" method="POST" v-on:submit.prevent="login" id="formRegister" v-if="status == ''">

    <span>@Localizer["register:instructions"]</span>
    <partial name="Shared/ErrorList"/>
    <input id="email" name="email" autofocus="" v-model="email" placeholder="@Localizer["yourEmail"]" required class="text-box" type="email">
    <input id="password" name="password" type="password" v-model="password" placeholder="@Localizer["login:password"]" autocomplete="current-password" required class="text-box ">
    <input id="passwordConfirm" name="passwordConfirm" type="password" v-model="passwordConfirm" placeholder="@Localizer["register:passwordConfirmation"]" autocomplete="current-password" required class="text-box ">
    <button v-on:click.prevent="register" class="primary full">
        @Localizer["register:button"]
    </button>
    <partial name="Shared/PasswordRequirements"/>
</form>

@if (Model.ExternalLogins.Count > 0)
{
    <div class="relative mt-6">
        <div class="absolute inset-0 flex items-center">
            <div class="w-full border-t border-gray-300"></div>
        </div>
        <div class="relative flex justify-center text-sm">
            <span class="px-2 bg-white text-gray-500">
                @Localizer["register:continueWith"]
            </span>
        </div>
    </div>
    <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="mt-4">
        <ul>

            @foreach (var provider in Model.ExternalLogins)
            {
                <li>
                    <button type="submit" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account" class="btn-simple">
                        <i class="@("fab fa-" + provider.DisplayName!.ToLower())"></i>&nbsp;
                        @provider.DisplayName
                    </button>
                </li>
            }

        </ul>
    </form>
}

@section Scripts
{
    <script>
        var emailRequiredMessage = "@string.Format(Localizer["errorMessage:required"]!, Localizer["email"])";
        var passwordRequiredMessage = "@string.Format(Localizer["errorMessage:required"]!, Localizer["login:password"])";
        var passwordConfirmationRequiredMessage = "@string.Format(Localizer["errorMessage:required"]!, Localizer["register:passwordConfirmation"])";
        var passwordMustMatch = "@Localizer["register:passwordMustMatch"]";
        var emailInvalidMessage = "@Localizer["errorMessage:invalidEmail"]";
        var recaptcha = '@RecaptchaOptions.Value.SiteKey';
        var returnUrl = '@Html.Raw(Model.ReturnUrl)';
    </script>
    <script src="/js/pages/register.js"></script>
}

@section MainFooter
{
    <partial name="Shared/BackToLogin"/>
}