@page
@inject IOptions<GoogleRecaptchaOptions> RecaptchaOptions

@using Nuages.Web.Recaptcha
@model ResetPasswordModel


<div class="mb-4 p-4" v-if="status == 'done'" v-show="status == 'done'" style="display: none">
    <span class="text-green-700 font-medium">
        <i class="fas fa-check"></i> @Localizer["resetPassword:success"]
    </span>
</div>


<form class="space-y-4 mt-4" method="POST" v-on:submit.prevent="resetPassword" id="formResetPassword" v-if="status != 'done'">
    <span class="instructions">@ViewData["Instructions"]</span>
    <partial name="Shared/ErrorList"/>

    <fieldset class="space-y-4" :disabled="status == 'sending'" v-if="status != 'done'">

        @if (ViewData["email"]?.ToString() == "")
        {
            <input id="email" name="email" type="email" v-model="email" placeholder="@Localizer["resetPassword:email"]" required class="text-box" autocomplete="username">
        }
        <input id="password" name="password" type="password" v-model="password" placeholder="@Localizer["resetPassword:password"]" autocomplete="current-password" required class="text-box ">
        <input id="passwordConfirm" name="passwordConfirm" type="password" v-model="passwordConfirm" placeholder="@Localizer["resetPassword:passwordConfirm"]" autocomplete="current-password" required class="text-box ">
        <button v-on:click.prevent="resetPassword" class="primary full items-center" :disabled="status == 'sending'">
            @ViewData["Submit"]<i class="fas fa-spinner fa-spin ml-2" v-if="status == 'sending'" v-show="status == 'sending'" style="display: none"></i>
        </button>

        <partial name="Shared/PasswordRequirements"/>
    </fieldset>


</form>

@section MainFooter
{
    <partial name="Shared/BackToLogin"/>
}

@section Scripts
{
    <script>
        var emailRequiredMessage = "@string.Format(Localizer["errorMessage:required"]!, Localizer["email"])";
        var passwordRequiredMessage = "@string.Format(Localizer["errorMessage:required"]!, Localizer["resetPassword:password"])";
        var passwordConfirmRequiredMessage = "@string.Format(Localizer["errorMessage:required"]!, Localizer["resetPassword:passwordConfirm"])";
        var emailInvalidMessage = "@Localizer["errorMessage:invalidEmail"]";
        var recaptcha = '@RecaptchaOptions.Value.SiteKey';
        var code = '@ViewData["code"]';
        var emailInitialValue = '@ViewData["email"]'
    </script>

    <script src="/js/pages/resetPassword.js"></script>
}