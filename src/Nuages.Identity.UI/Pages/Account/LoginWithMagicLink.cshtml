@page
@using Nuages.Web.Recaptcha
@model Nuages.Identity.UI.Pages.Account.LoginWithMagicLink
@inject IOptions<GoogleRecaptchaOptions> RecaptchaOptions

@{
    ViewData["Title"] = Localizer["magicLink:title"];
}

<form class="mt-4 space-y-4" v-on:submit.prevent="sendMagicLinkInfo" id="formMagicLink">

    <span class="instructions">@Localizer["magicLink:instructions"]</span>
    <partial name="Shared/ErrorList"/>
    <div class="mb-4 p-4" v-if="status == 'done'" v-show="status == 'done' && errors.length == 0" style="display: none">
        <span class="green-success font-medium">
            <i class="fas fa-check"></i> @Localizer["magicLink:seeEmail"]
        </span>
    </div>

    <fieldset class="space-y-4 " :disabled="status == 'sending'" v-if="status != 'done'">

        <input id="email" name="email" type="email" autofocus="" v-model="email" placeholder="@Localizer["yourEmail"]" required class="text-box">
        <button v-on:click.prevent="sendMagicLinkInfo" class="primary full items-center" :disabled="status == 'sending'">
            @Localizer["magicLink:send"]<i class="fas fa-spinner fa-spin ml-2" v-if="status == 'sending'" v-show="status == 'sending'" style="display: none"></i>
        </button>
    </fieldset>

</form>

@section Scripts
{
    <script>
        var emailRequiredMessage = "@string.Format(Localizer["errorMessage:required"]!, Localizer["email"])";
        var emailInvalidMessage = "@Localizer["errorMessage:invalidEmail"]";
        var recaptchaToken = '@RecaptchaOptions.Value.SiteKey';
        var returnUrl = '@Html.Raw(Model.ReturnUrl)';
        
        var xsrfToken = '@Antiforgery.GetAndStoreTokens(HttpContext).RequestToken';
    </script>
    <script src="/js/pages/loginWithMagicLink.js"></script>
}

@section MainFooter
{
    <div class="mt-4">
        <a  asp-page="/Account/Login" asp-route-returnUrl="@Model.ReturnUrl"><i class="fas fa-angle-left"></i>&nbsp;@Localizer["login.back"]</a>
    </div>
}